name: CI/CD - Ascent Lab

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restaurar dependências
        run: dotnet restore

      - name: Build da solução
        run: dotnet build --configuration Release --no-restore

      - name: Executar testes (Unitários e Integração)
        run: dotnet test --configuration Release --no-build --verbosity normal
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Build para deploy Web
        run: dotnet publish src/ascent-lab-web/ascent-lab-web.csproj --configuration Release --output ./publish-web

      - name: Build para deploy API
        run: dotnet publish /ascent-lab-api/ascent-lab-api.csproj --configuration Release --output ./publish-api
      
      # - name: Deploy Web para Render
      #   run: |
      #     render deploy --api-key ${{ secrets.RENDER_API_KEY }} --service-id ${{ secrets.RENDER_WEB_SERVICE_ID }} --dir ./publish-web
      
      # - name: Deploy API para Render
      #   run: |
      #     render deploy --api-key ${{ secrets.RENDER_API_KEY }} --service-id ${{ secrets.RENDER_API_SERVICE_ID }} --dir ./publish-api